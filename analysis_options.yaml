# This file configures the analyzer to use the lint rule set from `package:lint`

#include: package:lint/strict.yaml # For production apps
# include: package:lint/casual.yaml # For code samples, hackathons and other non-production code
include: package:lint/package.yaml # Use this for packages with public API


# You might want to exclude auto-generated files from dart analysis
analyzer:

  language:
    strict-casts: true
    strict-raw-types: true
  exclude:
    #- '**.freezed.dart'
    #- '**.g.dart'

# You can customize the lint rules set to your own liking. A list of all rules
# can be found at https://dart-lang.github.io/linter/lints/options/options.html
linter:
  rules:
    # Util classes are awesome!
    # avoid_classes_with_only_static_members: false
    
    # Make constructors the first thing in every class
    # sort_constructors_first: true

    # Choose wisely, but you don't have to
    # prefer_double_quotes: true
    # prefer_single_quotes: true

    - annotate_redeclares
    - avoid_dynamic_calls
    - avoid_final_parameters
    - avoid_print
    - avoid_unused_constructor_parameters
    - combinators_ordering
    - comment_references
    - directives_ordering
    - invalid_case_patterns
    - missing_code_block_language_in_doc_comment
    - no_self_assignments
    - omit_local_variable_types
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_expression_function_bodies
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_if_elements_to_conditional_expressions
    - prefer_relative_imports
    - prefer_single_quotes
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_lambdas
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_statements
    - unreachable_from_main
